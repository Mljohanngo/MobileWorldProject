// <auto-generated />
using System;
using Data_Access.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data_Access.Migrations
{
    [DbContext(typeof(MWDBContext))]
    partial class MWDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Entities.MWConfirmPin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("AdPartnerName")
                        .HasColumnType("text");

                    b.Property<string>("Channel")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HttpResponseCode")
                        .HasColumnType("int");

                    b.Property<string>("Msisdn")
                        .HasColumnType("text");

                    b.Property<string>("OpSubscriptionId")
                        .HasColumnType("text");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("PinCode")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("PubId")
                        .HasColumnType("text");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("int");

                    b.Property<string>("ResponseMessage")
                        .HasColumnType("text");

                    b.Property<string>("ResultMessage")
                        .HasColumnType("text");

                    b.Property<string>("SourceIp")
                        .HasColumnType("text");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.Property<string>("TrxID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfirmPin");
                });

            modelBuilder.Entity("Entities.MWSendPin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("AdPartnerName")
                        .HasColumnType("text");

                    b.Property<string>("Channel")
                        .HasColumnType("text");

                    b.Property<string>("ClientCorrelator")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HttpResponseCode")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("text");

                    b.Property<string>("Msisdn")
                        .HasColumnType("text");

                    b.Property<long>("OpSubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("PubId")
                        .HasColumnType("text");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("int");

                    b.Property<string>("ResponseMessage")
                        .HasColumnType("text");

                    b.Property<string>("ResultMessage")
                        .HasColumnType("text");

                    b.Property<string>("SourceIp")
                        .HasColumnType("text");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TrxID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SendPin");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AppName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<long>("PartnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Entities.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ContentUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventSource")
                        .HasColumnType("text");

                    b.Property<int>("IdOperator")
                        .HasColumnType("int");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastRenew")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastSuccessfulRenew")
                        .HasColumnType("datetime");

                    b.Property<string>("Msisdn")
                        .HasColumnType("text");

                    b.Property<DateTime>("NextRenew")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<char>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
